course_title: Intro to SQL for Data Science
course_description: Course description here.
programming_language: r
chapters:
  - chapter_title: Selecting and summarizing columns
    chapter_description: This is a template chapter.
    exercises:
      - type: VideoExercise
        title: Introduction
        content: |-
          * Motivating example (case study preview)
          * Why not just use R/Python/etc? Memory, speed, etc.
          * Database vocabulary (in context of example)
            * Database
            * Tables
            * Columns & rows (a.k.a. records)
            * Fields (informal = cells)
          * Basic SQL syntax
            * Not case-sensitive
            * End statement with semicolon
            * Stylistic conventions (?)
          * SELECT
          * DISTINCT
      - type: MultipleChoiceExercise
        title: Why use relational databases?
        content: >-
          Q: Which of the following is NOT a good reason to use relational
          databases?

          A: They are good at handling unstructured data
      - type: NormalExercise
        title: Simple SELECT statements
        content: >-
          Single column, multiple columns, all columns (*). Order matters!
          Finish with embedded MCE asking for specific value from last query
      - type: NormalExercise
        title: Combine SELECT with DISTINCT
        content: >-
          Select all distinct values of column_name with SELECT DISTINCT. Repeat
          with multiple columns. Follow with embedded MCE to test interpretation
      - type: MultipleChoiceExercise
        title: Select the proper SELECT
        content: >-
          (Test for style and syntax)


          Q: Which of the following is the proper way to select all distinct
          values of column_name from the table_name table?

          A: 

          SELECT DISTINCT column_name

          FROM table_name;
      - type: VideoExercise
        title: Aggregate functions
        content: |-
          * Difference between COUNT(*) and COUNT(column_name)
          * Combining COUNT with DISTINCT
          * SUM
          * AVG
          * MIN
          * MAX
      - type: NormalExercise
        title: COUNT
        content: >-
          COUNT(*) counts NULLs, COUNT(column_name) excludes NULLs,
          COUNT(DISTINCT column_name)
      - type: NormalExercise
        title: SUM and AVG
        content: Find SUM and AVG of numeric column. Embedded MCE to interpret result
      - type: NormalExercise
        title: MIN and MAX
        content: MIN and MAX of numeric column. Embedded MCE to interpret result
  - chapter_title: Filtering rows
    chapter_description: Description
    exercises:
      - type: VideoExercise
        title: Filter rows with WHERE
        content: |-
          * WHERE
          * Filtering numeric vs. text values
          * Basic comparison operators: =, <>, <, <=, >, >=
          * Multiple conditions with AND, OR
      - type: NormalExercise
        title: Filter for a single condition
        content: >-
          Practice filtering for numeric and text values. Start with = and <>,
          then move to inequalities
      - type: NormalExercise
        title: Filter for multiple conditions
        content: >-
          Same as above, but incorporate AND, OR. Finish with MCE: which
          statement is equivalent to BETWEEN? Combination of >= and <=
      - type: VideoExercise
        title: More advanced filtering
        content: |-
          * BETWEEN (compare to >= AND <= )
          * IN (compare to = AND = )
          * IS NULL, IS NOT NULL
      - type: NormalExercise
        title: Title
        content: Content
      - type: NormalExercise
        title: Title
        content: Content
      - type: VideoExercise
        title: Search for patterns with LIKE
        content: |-
          * LIKE
          * Wildcards: %, _, [charlist], [!charlist]
      - type: NormalExercise
        title: Title
        content: Content
      - type: NormalExercise
        title: Title
        content: Content
      - type: VideoExercise
        title: Simple subqueries
        content: Content
      - type: NormalExercise
        title: Title
        content: Content
      - type: NormalExercise
        title: Title
        content: Content
  - chapter_title: Sorting and grouping
    chapter_description: Description
    exercises:
      - type: VideoExercise
        title: Sort with ORDER BY
        content: |-
          * ORDER BY
            * Single column
            * Multiple columns
            * DESC
      - type: VideoExercise
        title: Get started with GROUP BY
        content: |-
          * GROUP BY
            * Single column
            * Multiple columns
          * Combine with ORDER BY
      - type: VideoExercise
        title: Combine GROUP BY with aggregate functions
        content: >-
          * Unleash the full power of GROUP BY and aggregate functions by
          combining them to perform operations within groups

          * Examples covering COUNT, SUM, AVG, MIN, MAX and DISTINCT
  - chapter_title: 'Case study: New York City bike share'
    chapter_description: Description
    exercises: []
